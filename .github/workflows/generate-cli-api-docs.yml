# **what?**
# On push, if anything in core/dbt/docs or core/dbt/cli has been
# created or modified, regenerate the CLI API docs using sphinx.

# **why?**
# We watch for changes in core/dbt/cli because the CLI API docs rely on click
# and all supporting flags/params to be generated. We watch for changes in
# core/dbt/docs since any changes to sphinx configuration or any of the
# .rst files there could result in a differently build final index.html file.

# **when?**
# Whenever a change has been pushed to a branch, and only if there is a diff
# between the PR branch and main's core/dbt/cli and or core/dbt/docs dirs.

name: Generate CLI API docs

on:
  pull_request:

permissions:
  contents: write
  pull-requests: write

env:
  CLI_DIR: ${{ github.workspace }}/core/dbt/cli
  DOCS_DIR: ${{ github.workspace }}/core/dbt/docs
  DOCS_BUILD_DIR: ${{ github.workspace }}/core/dbt/docs/build

jobs:
  check_gen:
    name: check if generation needed
    runs-on: ubuntu-latest
    outputs:
      cli_dir_changed: ${{ steps.check_cli.outputs.cli_dir_changed }}
      docs_dir_changed: ${{ steps.check_docs.outputs.docs_dir_changed }}

    steps:
    - name: git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # trying to get sha of previous commit
    - name: set last commit commit
      id: set_last_sha
      run: |
        LAST_SHA=$(git rev-parse "${{ github.event.after }}~1")
        echo "last_sha=$LAST_SHA" >> $GITHUB_OUTPUT

    - name: check for changes in core/dbt/cli
      id: check_cli
      run: |
        CLI_DIR_CHANGES=$(git diff ${{ steps.set_last_sha.outputs.last_sha }} ${{ github.event.after }} -- ${{ env.CLI_DIR }})
        echo "cli_dir_changed=false" >> $GITHUB_OUTPUT
        if [ -n "$CLI_DIR_CHANGES" ]; then
          echo "changes found"
          echo $CLI_DIR_CHANGES
          echo "cli_dir_changed=true" >> $GITHUB_OUTPUT
          exit 0
        fi
        echo "no changes found"

    - name: check for changes in core/dbt/docs
      id: check_docs
      if: steps.check_cli.outputs.cli_dir_changed == 'false'
      run: |
        DOCS_DIR_CHANGES=$(git diff ${{ steps.set_last_sha.outputs.last_sha }} ${{ github.event.after }} -- ${{ env.DOCS_DIR }} ':!${{ env.DOCS_BUILD_DIR }}')
        echo "docs_dir_changed=false" >> $GITHUB_OUTPUT
        if [ -n "$DOCS_DIR_CHANGES" ]; then
          echo "changes found"
          echo $DOCS_DIR_CHANGES
          echo "docs_dir_changed=true" >> $GITHUB_OUTPUT
          exit 0
        fi
        echo "no changes found"

  gen_docs:
    name: generate docs
    runs-on: ubuntu-latest
    needs: [check_gen]
    if: |
      needs.check_gen.outputs.cli_dir_changed == 'true'
      || needs.check_gen.outputs.docs_dir_changed == 'true'

    steps:
      - name: git checkout
        uses: actions/checkout@v3

      - name: install python
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.8

      - name: install dev requirements
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt -r dev-requirements.txt

      - name: generate docs
        run: |
          source env/bin/activate
          cd ${{ env.DOCS_DIR }}

          echo cleaning existing docs
          make clean

          echo creating docs
          make html

      - name: push docs
        run: |
          git show-ref | grep CT-12
          echo >>>>>
          git config --global user.name "Doc Bot"
          git config --global user.email "doc.bot@dbtlabs.com"
          git add ${{ env.DOCS_BUILD_DIR }}
          git commit -m "[auto] add generated CLI API docs"
          git push origin ${{ github.head_ref }}
